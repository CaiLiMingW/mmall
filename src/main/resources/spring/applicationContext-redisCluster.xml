<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--redis集群配置-->
    <!--<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">-->
        <!--<property name="maxRedirects" value="3"></property>-->
        <!--<property name="clusterNodes">-->
            <!--<set>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host" value="${redis1.ip}"></constructor-arg>-->
                    <!--<constructor-arg name="port" value="${redis1.port}"></constructor-arg>-->
                <!--</bean>-->
                <!--<bean class="org.springframework.data.redis.connection.RedisNode">-->
                    <!--<constructor-arg name="host" value="${redis2.ip}"></constructor-arg>-->
                    <!--<constructor-arg name="port" value="${redis2.port}"></constructor-arg>-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!--redis连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >
		<property name="maxIdle" value="${redis.max.idle}"/>
		<property name="maxTotal" value="${redis.max.total}"/>
		<property name="minIdle" value="${redis.min.idle}"/>
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>
		<property name="testOnReturn" value="${redis.test.return}"/>
		<property name="testOnBorrow" value="${redis.test.borrow}"/>
    </bean>

    <!--redis连接工厂-->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
		<property name="poolConfig" ref="jedisPoolConfig"/>
        <!--<constructor-arg name="clusterConfig" ref="redisClusterConfiguration"/>-->
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis1.ip}"/>
		<property name="port" value="${redis1.port}"/>
		<property name="timeout" value="${redis.time.out}"/>
	</bean>

    <!--redis操作模板-->
	<bean id="redisTemplate"  class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="keySerializer" >
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
		</property>
		<!-- ;开启事务 ;-->
		<!--<property name="enableTransactionSupport" value="true"></property>-->
	</bean>
</beans>
