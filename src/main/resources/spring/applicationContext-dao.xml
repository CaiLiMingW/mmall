<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->


	<!-- Spring的配置文件，这里主要配置和业务逻辑有关的 -->

	<!--数据源-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${Url}"/>
		<property name="driverClass" value="${DriverClass}"/>
		<property name="user" value="${User}"/>
		<property name="password" value="${Password}"/>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <!--连接池中保留的最小连接数。 -->
        <property name="minPoolSize" value="3"/>
        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="3"/>
        <!--最大空闲时间,20秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="20"/>
    </bean>

	<!--================== 配置和MyBatis的整合=============== -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描java bean，自动使用别名 -->
		<property name="typeAliasesPackage" value="org.clm.Pojo"/>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml"/>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<!--扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="org.clm.Dao"/>
	</bean>
	
	<!--&lt;!&ndash; 配置一个可以执行批量的sqlSessio2n &ndash;&gt;
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="executorType" value="BATCH"/>
	</bean>
	-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >-->
	<!--<property name="maxIdle" value="${redis.max.idle}"/>-->
	<!--<property name="maxTotal" value="${redis.max.total}"/>-->
	<!--<property name="minIdle" value="${redis.min.idle}"/>-->
    <!--<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>-->
	<!--<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"/>-->
    <!--<property name="testOnReturn" value="${redis.test.return}"/>-->
	<!--<property name="testOnBorrow" value="${redis.test.borrow}"/>-->
    <!--</bean>-->

	<!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >-->
		<!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
		<!--<property name="hostName" value="${redis1.ip}"/>-->
		<!--<property name="port" value="${redis1.port}"/>-->
		<!--<property name="timeout" value="${redis.time.out}"/>-->
	<!--</bean>-->

	<!--<bean id="redisTemplate"  class="org.springframework.data.redis.core.RedisTemplate">-->
		<!--<property name="connectionFactory" ref="connectionFactory"/>-->
		<!--<property name="keySerializer" >-->
			<!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
		<!--</property>-->
		<!--<property name="valueSerializer" >-->
			<!--<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />-->
		<!--</property>-->
		<!--<property name="hashKeySerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
		<!--</property>-->
		<!--<property name="hashValueSerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>-->
		<!--</property>-->
		<!--&lt;!&ndash; ;开启事务 ;&ndash;&gt;-->
		<!--&lt;!&ndash;<property name="enableTransactionSupport" value="true"></property>&ndash;&gt;-->
	<!--</bean>-->


</beans>
