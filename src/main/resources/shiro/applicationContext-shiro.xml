<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">
<!--
    配置securityManager，也就是shiro的核心
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        自定义relam
        <property name="realm" ref=""/>
        注入缓存管理器
        <property name="cacheManager" ref="cacheManager"/>
        注入会话管理器
        <property name="sessionManager" ref="sessionManager"/>
        记住我
        <property name="rememberMeManager" ref=""/>
    </bean>

    1.自定义Realm


    2.定义缓存器管理器
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>

    3.定义会话管理器
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        设置会话有效时间
        <property name="globalSessionTimeout" value="6000000"/>
        是否删除失效session
        <property name="deleteInvalidSessions" value="true"/>
    </bean>

     4.rememberMeManager管理器，写cookie，取出cookie生成用户信息
    <bean id="cookieRememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref=""/>
    </bean>
    安全认证过滤器
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/user/login.do"/>
        <property name="successUrl" value="/user/get_Information.do"/>
        访问未授权资源跳转链接
        <property name="unauthorizedUrl"value=""/>
         Shiro连接约束配置,即过滤链的定义
         此处可配合这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839
         下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的
         anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种
         authc：该过滤器下的页面必须验证后才能访问,
        它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter
        <property name="filterChainDefinitions">
            <value>
                /mydemo/login=anon
                /mydemo/getVerifyCodeImage=anon
                /main**=authc
                /user/info**=authc
                /admin/listUser**=authc,perms[admin:manage]
            </value>
        </property>

    </bean>



     Shiro生命周期处理器
        保证实现了Shiro内部lifecycle函数的bean执行
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    -->
</beans>